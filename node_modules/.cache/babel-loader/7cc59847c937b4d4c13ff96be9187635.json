{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/react-projects/memory/src/components/CardFlip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport { Card } from '@material-ui/core';\nimport { CardMedia } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport './Cards.css';\nimport blank from '../images/blank.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CardComponent = props => {\n  _s();\n\n  const flipped = props.flipped;\n  const matched = props.matched;\n  const isNotFlipped = useMemo(() => {\n    return !props.flipped && !props.matched;\n  }, [props.flipped, props.matched]);\n\n  const toggleFlip = () => {\n    props.setCardFlipped(props.id, !flipped);\n  };\n\n  if (isNotFlipped) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"CardStyleBack\",\n      style: {\n        backgroundColor: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"Button\",\n        onClick: toggleFlip,\n        children: [\" \", /*#__PURE__*/_jsxDEV(CardMedia, {\n          className: \"CardMedia\",\n          type: \"blank\",\n          component: \"img\",\n          image: blank,\n          alt: \"blank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"CardStyleFront\",\n      style: {\n        backgroundColor: props.color\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"Button\",\n        disabled: matched,\n        onClick: toggleFlip,\n        children: [\" \", /*#__PURE__*/_jsxDEV(CardMedia, {\n          className: \"CardMedia\",\n          type: props.type,\n          component: \"img\",\n          image: props.image,\n          alt: \"arcade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"CardStyleBack \" + (!isNotFlipped ? 'Hidden' : \"\"),\n      style: {\n        backgroundColor: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"Button\",\n        onClick: toggleFlip,\n        children: [\" \", /*#__PURE__*/_jsxDEV(CardMedia, {\n          className: \"CardMedia\",\n          type: \"blank\",\n          component: \"img\",\n          image: blank,\n          alt: \"blank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CardComponent, \"moU6pkAnWmiBbmFN06MkXMmp9hc=\");\n\n_c = CardComponent;\nexport default CardComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardComponent\");","map":{"version":3,"sources":["/Users/admin/Documents/react-projects/memory/src/components/CardFlip.js"],"names":["React","useMemo","Card","CardMedia","Button","blank","CardComponent","props","flipped","matched","isNotFlipped","toggleFlip","setCardFlipped","id","backgroundColor","color","type","image"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,aAAP;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE7B,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAMC,OAAO,GAAGF,KAAK,CAACE,OAAtB;AAEA,QAAMC,YAAY,GAAGT,OAAO,CAAC,MAAM;AAC/B,WAAO,CAACM,KAAK,CAACC,OAAP,IAAkB,CAACD,KAAK,CAACE,OAAhC;AACH,GAF2B,EAEzB,CAACF,KAAK,CAACC,OAAP,EAAgBD,KAAK,CAACE,OAAtB,CAFyB,CAA5B;;AAIA,QAAME,UAAU,GAAG,MAAM;AACrBJ,IAAAA,KAAK,CAACK,cAAN,CAAqBL,KAAK,CAACM,EAA3B,EAA+B,CAACL,OAAhC;AACH,GAFD;;AAIA,MAAIE,YAAJ,EAAkB;AACd,wBAAO,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,KAAK,EAAE;AAACI,QAAAA,eAAe,EAAC;AAAjB,OAAvC;AAAA,6BACP,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AACI,QAAA,OAAO,EAAEH,UADb;AAAA,qCAEE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,WAArB;AACF,UAAA,IAAI,EAAC,OADH;AAEF,UAAA,SAAS,EAAC,KAFR;AAGF,UAAA,KAAK,EAAEN,KAHL;AAIF,UAAA,GAAG,EAAC;AAJF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,YAAP;AAUH;;AAED,sBACI;AAAA,4BACA,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,KAAK,EAAE;AAACS,QAAAA,eAAe,EAACP,KAAK,CAACQ;AAAvB,OAAxC;AAAA,6BACA,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AACI,QAAA,QAAQ,EAAEN,OADd;AAEI,QAAA,OAAO,EAAEE,UAFb;AAAA,qCAGE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,WAArB;AACF,UAAA,IAAI,EAAEJ,KAAK,CAACS,IADV;AAEF,UAAA,SAAS,EAAC,KAFR;AAGF,UAAA,KAAK,EAAET,KAAK,CAACU,KAHX;AAIF,UAAA,GAAG,EAAC;AAJF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA,eAYD,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE,oBAAoB,CAACP,YAAD,GAAgB,QAAhB,GAA2B,EAA/C,CAAjB;AAAqE,MAAA,KAAK,EAAE;AAACI,QAAAA,eAAe,EAAC;AAAjB,OAA5E;AAAA,6BACC,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AACI,QAAA,OAAO,EAAEH,UADb;AAAA,qCAEE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,WAArB;AACF,UAAA,IAAI,EAAC,OADH;AAEF,UAAA,SAAS,EAAC,KAFR;AAGF,UAAA,KAAK,EAAEN,KAHL;AAIF,UAAA,GAAG,EAAC;AAJF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAZC;AAAA,kBADJ;AA0BH,CApDD;;GAAMC,a;;KAAAA,a;AAsDN,eAAeA,aAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport { Card } from '@material-ui/core';\nimport { CardMedia } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport './Cards.css';\n\nimport blank from '../images/blank.png';\n\n\nconst CardComponent = (props) => {\n    \n    const flipped = props.flipped;\n    const matched = props.matched;\n\n    const isNotFlipped = useMemo(() => {\n        return !props.flipped && !props.matched;\n    }, [props.flipped, props.matched])\n    \n    const toggleFlip = () => {\n        props.setCardFlipped(props.id, !flipped);\n    }\n\n    if (isNotFlipped) {\n        return <Card className=\"CardStyleBack\" style={{backgroundColor:'white'}}> \n        <Button className=\"Button\"\n            onClick={toggleFlip}\n        > <CardMedia className=\"CardMedia\"\n        type=\"blank\"\n        component=\"img\"\n        image={blank}\n        alt=\"blank\"\n        /></Button>\n        </Card>\n    }\n\n    return (\n        <>\n        <Card className=\"CardStyleFront\" style={{backgroundColor:props.color}}> \n        <Button className=\"Button\"\n            disabled={matched}\n            onClick={toggleFlip}\n        > <CardMedia className=\"CardMedia\"\n        type={props.type}\n        component=\"img\"\n        image={props.image}\n        alt=\"arcade\"\n        /></Button>\n       </Card>\n       <Card className={\"CardStyleBack \" + (!isNotFlipped ? 'Hidden' : \"\")} style={{backgroundColor:'white'}}> \n        <Button className=\"Button\"\n            onClick={toggleFlip}\n        > <CardMedia className=\"CardMedia\"\n        type=\"blank\"\n        component=\"img\"\n        image={blank}\n        alt=\"blank\"\n        /></Button>\n        </Card>\n       </>\n       \n     );\n}\n \nexport default CardComponent;"]},"metadata":{},"sourceType":"module"}